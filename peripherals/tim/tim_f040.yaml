"TIM*":
  ARR:
    ARR: [0, 0xffff]
  CNT:
    CNT: [0, 0xffff]
  CR1:
    CKD:
      NoMult: [0, "tDTS = tCK_INT"]
      X2: [1, "tDTS = 2 x tCK_INT"]
      X4: [2, "tDTS = 4 x tCK_INT"]
    ARPE:
      Disabled: [0, "TIMx_ARR register is not buffered"]
      Enabled: [1, "TIMx_ARR register is buffered"]
    CMS:
       EdgeAligned: [0, "The counter counts up or down depending on the direction bit"]
       CenterAligned1: [1, "The counter counts up and down alternatively. Output compare interrupt flags are set only when the counter is counting down"]
       CenterAligned2: [2, "The counter counts up and down alternatively. Output compare interrupt flags are set only when the counter is counting up"]
       CenterAligned3: [3, "The counter counts up and down alternatively. Output compare interrupt flags are set both when the counter is counting up or down"]
    OPM:
      NotStopped: [0, "Counter not stopped at update event"]
      Stopped: [1, "Counter stopped at update event"]
    URS:
      AnyEvent: [0, "Any of counter overflow/underflow, setting UG, or update through slave mode, generates an update interrupt or DMA request"]
      CounterOnly: [1, "Only counter overflow/underflow generates an update interrupt or DMA request"]
    UDIS:
      Enabled: [0, "Update event enabled"]
      Disabled: [1, "Update event disabled"]
    CEN:
      Disabled: [0, "Counter disabled"]
      Enabled: [1, "Counter enabled"]
  DIER:
    TDE:
      Disabled: [0, "Trigger DMA request disabled"]
      Enabled: [1, "Trigger DMA request enabled"]
    "CC?DE":
      Disabled: [0, "CCx DMA request disabled"]
      Enabled: [1, "CCx DMA request enabled"]
    UDE:
      Disabled: [0, "Update DMA request disabled"]
      Enabled: [1, "Update DMA request enabled"]
    TIE:
      Disabled: [0, "Trigger interrupt disabled"]
      Enabled: [1, "Trigger interrupt enabled"]
    "CC?IE":
      Disabled: [0, "CCx interrupt disabled"]
      Enabled: [1, "CCx interrupt enabled"]
    UIE:
      Disabled: [0, "Update interrupt disabled"]
      Enabled: [1, "Update interrupt enabled"]
  EGR:
    "CC?G":
      _write:
        Trigger: [1, "If CC1 is an output: CC1IF flag is set, Corresponding interrupt or DMA request is sent if enabled. If CC1 is an input: The current value of the counter is captured in TIMx_CCR1 register"]
    UG:
      _write:
        Trigger: [1, "Re-initializes the timer counter and generates an update of the registers"]
    TG:
      _write:
        Trigger: [1, "Trigger interrupt generated"]
  PSC:
    PSC: [0, 0xffff]
  SR:
    "CC?OF":
      _read:
        Overcapture: [1, "The counter value has been captured in TIMx_CCRx register while CCxOF flag was already set"]
      _W0C:
        Clear: [0, "Clear flag"]
    TIF:
      _read:
        Triggered: [1, "Valid edge detected at the TRGI input"]
      _W0C:
        Clear: [0, "Clear flag"]
    "CC?IF":
      _read:
        Overcapture: [1, "The counter value has been captured in TIMx_CCRx register while CCxIF flag was already set"]
      _W0C:
        Clear: [0, "Clear flag"]
    UIF:
      _read:
        Update: [1, "Update event waiting for response"]
      _W0C:
        Clear: [0, "Clear flag"]

TIM1:
  CR2:
    "OIS?":
      Off: [0, ""]
      On: [1, "Output Idle state ? (OC? output)"]
    "OIS?N":
      Off: [0, ""]
      On: [1, "Output Idle state ? (OC?N output)"]
    CCUS:
      Bit: [0, "When capture/compare control bits are preloaded (CCPC=1), they are updated by setting the COMG bit only"]
      BitOrEdge: [1, "When capture/compare control bits are preloaded (CCPC=1), they are updated by setting the COMG bit or when an rising edge occurs on TRGI"]
    CCPC:
      NoPreload: [0, "CCxE, CCxNE, OCxM are not updated with event"]
      Preload: [1, "CCxE, CCxNE, OCxM are updated with event"]
  SMCR:
    OCCS:
      Ocref_Clr: [0, "OCREF_CLR_INT connected to the OCREF_CLR input"]
      Etrf: [1, "OCREF_CLR_INT connected to ETRF"]

"TIM[123]":
  CR1:
     DIR:
       Up: [0, "Counter used as upcounter"]
       Down: [1, "Counter used as downcounter"]
  CCMR2_OUTPUT:
    OC?CE:
      Disabled: [0, "Output compare ? clear disabled"]
      Enabled: [1, "Output compare ? clear enabled"]
    OC?M: [0, 6]
    OC?PE:
      Disabled: [0, "Preload register on CCRx disabled. New values written to CCRx are taken into account immediately"]
      Enabled: [1, "Preload register on CCRx enabled. Preload value is loaded into active register on each update event"]
    CC?S:
      Output: [0, "CCx channel is configured as output"]
    OC3FE:
      Disabled: [0, "Output compare 3 fast disabled"]
      Enabled: [1, "Output compare 3 fast enabled"]
  CCMR2_INPUT:
    IC?F: [0, 15]
    IC?PSC: [0, 3]
    CC4S:
      Output: [0, "CC4 channel is configured as output"]
      TI4: [1, "CC4 channel is configured as input, IC4 is mapped on TI4"]
      TI3: [2, "CC4 channel is configured as input, IC4 is mapped on TI3"]
      TRC: [3, "CC4 channel is configured as input, IC4 is mapped on TRC"]
    CC3S:
      Output: [0, "CC3 channel is configured as output"]
      TI3: [1, "CC3 channel is configured as input, IC3 is mapped on TI3"]
      TI4: [2, "CC3 channel is configured as input, IC3 is mapped on TI4"]
      TRC: [3, "CC3 channel is configured as input, IC3 is mapped on TRC"]
  CCR3:
    CCR3: [0, 0xffff]
  CCR4:
    CCR4: [0, 0xffff]

"TIM[123], TIM15":
  CCR2:
    CCR2: [0, 0xffff]
  SMCR:
    ETP:
      NotInverted: [0, "ETR is noninverted, active at high level or rising edge"]
      Inverted: [1, "ETR is inverted, active at low level or falling edge"]
    ECE:
      Disabled: [0, "External clock mode 2 disabled"]
      Enabled: [1, "External clock mode 2 enabled. The counter is clocked by any active edge on the ETRF signal."]
    ETPS:
      Div1: [0, "Prescaler OFF"]
      Div2: [1, "ETRP frequency divided by 2"]
      Div4: [2, "ETRP frequency divided by 4"]
      Div8: [3, "ETRP frequency divided by 8"]
    ETF:
      NoFilter: [0, "No filter, sampling is done at fDTS"]
      FCK_INT_N2: [1, "fSAMPLING=fCK_INT, N=2"]
      FCK_INT_N4: [2, "fSAMPLING=fCK_INT, N=4"]
      FCK_INT_N8: [3, "fSAMPLING=fCK_INT, N=8"]
      FDTS_Div2_N6: [4, "fSAMPLING=fDTS/2, N=6"]
      FDTS_Div2_N8: [5, "fSAMPLING=fDTS/2, N=8"]
      FDTS_Div4_N6: [6, "fSAMPLING=fDTS/4, N=6"]
      FDTS_Div4_N8: [7, "fSAMPLING=fDTS/4, N=8"]
      FDTS_Div8_N6: [8, "fSAMPLING=fDTS/8, N=6"]
      FDTS_Div8_N8: [9, "fSAMPLING=fDTS/8, N=8"]
      FDTS_Div16_N5: [10, "fSAMPLING=fDTS/16, N=5"]
      FDTS_Div16_N6: [11, "fSAMPLING=fDTS/16, N=6"]
      FDTS_Div16_N8: [12, "fSAMPLING=fDTS/16, N=8"]
      FDTS_Div32_N5: [13, "fSAMPLING=fDTS/32, N=5"]
      FDTS_Div32_N6: [14, "fSAMPLING=fDTS/32, N=6"]
      FDTS_Div32_N8: [15, "fSAMPLING=fDTS/32, N=8"]
    MSM:
      NoSync: [0, "No action"]
      Sync: [1, "The effect of an event on the trigger input (TRGI) is delayed to allow a perfect synchronization between the current timer and its slaves (through TRGO)"]
    TS:
      ITR0: [0, "Internal Trigger 0 (ITR0)"]
      ITR2: [2, "Internal Trigger 2 (ITR2)"]
      TI1F_ED: [4, "TI1 Edge Detector (TI1F_ED)"]
      TI1FP1: [5, "Filtered Timer Input 1 (TI1FP1)"]
      TI2FP2: [6, "Filtered Timer Input 2 (TI2FP2)"]
      ETRF: [7, "External Trigger input (ETRF)"]
    SMS:
      Disabled: [0, "Slave mode disabled - if CEN = â€˜1 then the prescaler is clocked directly by the internal clock."]
      Encoder_Mode_1: [1, "Encoder mode 1 - Counter counts up/down on TI2FP1 edge depending on TI1FP2 level."]
      Encoder_Mode_2: [2, "Encoder mode 2 - Counter counts up/down on TI1FP2 edge depending on TI2FP1 level."]
      Encoder_Mode_3: [3, "Encoder mode 3 - Counter counts up/down on both TI1FP1 and TI2FP2 edges depending on the level of the other input."]
      Reset_Mode: [4, "Reset Mode - Rising edge of the selected trigger input (TRGI) reinitializes the counter and generates an update of the registers."]
      Gated_Mode: [5, "Gated Mode - The counter clock is enabled when the trigger input (TRGI) is high. The counter stops (but is not reset) as soon as the trigger becomes low. Both start and stop of the counter are controlled."]
      Trigger_Mode: [6, "Trigger Mode - The counter starts at a rising edge of the trigger TRGI (but it is not reset). Only the start of the counter is controlled."]
      Ext_Clock_Mode: [7, "External Clock Mode 1 - Rising edges of the selected trigger (TRGI) clock the counter."]

"TIM1, TIM1[567]":
  BDTR:
    MOE:
      Disabled: [0, "OC and OCN outputs are disabled or forced to idle state"]
      Enabled: [1, "OC and OCN outputs are enabled if their respective enable bits are set (CCxE, CCxNE in TIMx_CCER register)"]
    AOE:
      Disabled: [0, "MOE can be set only by software"]
      Enabled: [1, "MOE can be set by software or automatically at the next update event (if the break input is not be active) Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits in TIMx_BDTR register)"]
    BKP:
      Low: [0, "Brake input active low"]
      High: [1, "Brake intput active high"]
    BKE:
      Disabled: [0, "brake input (BRK and BRK_ACTH) is disabled"]
      Enabled: [1, "Brake input (BRK and BRK_ACTH) is enabled"]
    OSSR:
      Disabled: [0, "When inactive, OC/OCN outputs are disabled (OC/OCN enable output signal = 0)"]
      Enabled: [1, "When inactive, OC/OCN outputs are enabled with their inactive level as soon as CCxE = 1 or CCxNE = 1. Then, OC/OCN enable output signal = 1"]
    OSSI:
      Disabled: [0, "When inactive, OC/OCN outputs are disabled (OC/OCN enable output signal = 0)"]
      Enabled: [1, "When inactive, OC/OCN outputs are forced first with their idle level as soon as CCxE = 1 or CCxNE = 1. OC/OCN enable output signal = 1)"]
    LOCK:
      Off: [0, "LOCK OFF - No bit is write protected"]
      Lvl1: [1, " LOCK Level 1 = DTG bits in TIMx_BDTR register, OISx and OISxN bits in TIMx_CR2 register and BKE/BKP/AOE bits in TIMx_BDTR register can no longer be written"]
      Lvl2: [2, "LOCK Level 2 = LOCK Level 1 + CC Polarity bits (CCxP/CCxNP bits in TIMx_CCER register, as long as the related channel is configured in output through the CCxS bits) as well as OSSR and OSSI bits can no longer be written"]
      Lvl3: [3, "LOCK Level 3 = LOCK Level 2 + CC Control bits (OCxM and OCxPE bits in TIMx_CCMRx registers, as long as the related channel is configured in output through the CCxS bits) can no longer be written"]
    DTG: [0, 0xff]
  RCR:
    REP: [0, 0xff]

"TIM[123], TIM1[567]":
  DCR:
    DBL: [0, 18]
    DBA: [0, 31]
  DMAR:
    DMAB: [0, 0xffff]

"TIM[123], TIM1[4567]":
  CCER:
    CC?P:
      Disabled: [0, "OC? active high"]
      Enabled: [1, "OC? active low"]
    CC?E:
      Disabled: [0, "Capture Disable"]
      Enabled: [1, "Capture Enable"]
  CCMR1_INPUT:
    IC?F:
      NoFilter: [0, "No filter, sampling is done at fDTS"]
      FCK_INT_N2: [1, "fSAMPLING=fCK_INT, N=2"]
      FCK_INT_N4: [2, "fSAMPLING=fCK_INT, N=4"]
      FCK_INT_N8: [3, "fSAMPLING=fCK_INT, N=8"]
      FDTS_Div2_N6: [4, "fSAMPLING=fDTS/2, N=6"]
      FDTS_Div2_N8: [5, "fSAMPLING=fDTS/2, N=8"]
      FDTS_Div4_N6: [6, "fSAMPLING=fDTS/4, N=6"]
      FDTS_Div4_N8: [7, "fSAMPLING=fDTS/4, N=8"]
      FDTS_Div8_N6: [8, "fSAMPLING=fDTS/8, N=6"]
      FDTS_Div8_N8: [9, "fSAMPLING=fDTS/8, N=8"]
      FDTS_Div16_N5: [10, "fSAMPLING=fDTS/16, N=5"]
      FDTS_Div16_N6: [11, "fSAMPLING=fDTS/16, N=6"]
      FDTS_Div16_N8: [12, "fSAMPLING=fDTS/16, N=8"]
      FDTS_Div32_N5: [13, "fSAMPLING=fDTS/32, N=5"]
      FDTS_Div32_N6: [14, "fSAMPLING=fDTS/32, N=6"]
      FDTS_Div32_N8: [15, "fSAMPLING=fDTS/32, N=8"]
    IC?PSC:
      NoDiv: [0, "no prescaler, capture is done each time an edge is detected on the capture input"]
      Div2: [1, "capture is done once every 2 events"]
      Div4: [2, "capture is done once every 4 events"]
      Div8: [3, "capture is done once every 8 events"]
    CC?S:
      TI1: [1, "CC? channel is configured as input, IC1 is mapped on TI1"]
      TI2: [2, "CC? channel is configured as input, IC1 is mapped on TI2"]
      TRC: [3, "CC? channel is configured as input, IC1 is mapped on TRC"]
  CCMR1_OUTPUT:
    OC1PE:
      Disabled: [0, "Preload register on CCR1 disabled. New values written to CCR1 are taken into account immediately"]
      Enabled: [1, "Preload register on CCR1 enabled. Preload value is loaded into active register on each update event"]
    CC1S:
      Output: [0, "CC1 channel is configured as output"]
  CCR1:
    CCR1: [0, 0xffff]

"TIM[12367], TIM1[567]":
  CR2:
    TI1S:
      Single: [0, "TIMx_CH1 pin is connected to TI1 input"]
      Xor: [1, "TIMx_CH1, CH2, CH3 pins are connected to TI1 input (XOR combination)"]
    MMS:
      Reset: [0, "The UG bit from the TIMx_EGR register is used as trigger output"]
      Enable: [1, "The counter enable signal, CNT_EN, is used as trigger output"]
      Update: [2, "The update event is selected as trigger output"]
      ComparePulse: [3, "The trigger output send a positive pulse when the CC1IF flag it to be set, as soon as a capture or a compare match occurred"]
      CompareOC1: [4, "OC1REF signal is used as trigger output"]
      CompareOC2: [5, "OC2REF signal is used as trigger output"]
      CompareOC3: [6, "OC3REF signal is used as trigger output"]
      CompareOC4: [7, "OC4REF signal is used as trigger output"]
    CCDS:
      OnCompare: [0, "CCx DMA request sent when CCx event occurs"]
      OnUpdate: [1, "CCx DMA request sent when update event occurs"]
  SR:
    IC?IF:
      NoCapture: [0, "no repeat captures are generated"]
      Capture: [1, "falling edge capture event occurs"]
    IC?IR:
      NoCapture: [0, "no repeat captures are generated"]
      Capture: [1, "Rising edge capture event occurs"]
    BIF:
      _read:
        NoBrake: [0, "no brake event is generated"]
        Brake: [1, "Valid level detected on the brake input"]
      _W0C:
        Clear: [0, "Clear flag"]
    COMIF:
      _read:
        NoEvt: [0, "no COM event is generated"]
        Event: [1, "COM interrupt waiting for response"]
      _W0C:
        Clear: [0, "Clear flag"]
